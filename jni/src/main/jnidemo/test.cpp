/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "include/com_hsae_d531mc_jni_JniManager.h"
/* Header for class com_hsae_d531mc_jni_JniManager */

//条件编译:如果没有定义则定义，#ifndef #define #endif
//#ifndef _Included_com_hsae_d531mc_jni_JniManager
//#define _Included_com_hsae_d531mc_jni_JniManager
#ifdef __cplusplus

static jmethodID mid_speak;

extern "C" {
#endif
/*
 * Class:     com_hsae_d531mc_jni_JniManager
 * Method:    sum
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_hsae_d531mc_jni_JniManager_sum
(JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hsae_d531mc_jni_JniManager
 * Method:    clone
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_hsae_d531mc_jni_JniManager_clone
(JNIEnv *, jclass, jstring);

/*
 * Class:     com_hsae_d531mc_jni_JniManager
 * Method:    mult
 * Signature: (FF)F
 */
JNIEXPORT jfloat JNICALL Java_com_hsae_d531mc_jni_JniManager_mult
(JNIEnv * env, jclass classes, jfloat a, jfloat b){
    //cls = env->GetObjectClass(jobject) //get java object class
    //javap -s JniManager.class
    //同理C也可以访问JniManager中的变量，修改第二个和第三个参数就行了
    mid_speak = env->GetMethodID(classes,"speak","(I)I");
    //在native层构建一个对象，这里是获取构造方法
    jmethodID constrocMID = env->GetMethodID(classes,"<init>", "()V");

    //构建对象，无参构造
    jobject jnimanager_obj = env->NewObject(classes,constrocMID);

    //这里调用java方法
    env->CallIntMethod(jnimanager_obj,mid_speak,6);

    float result = a*b;
    return result;
}

#ifdef __cplusplus
}
#endif