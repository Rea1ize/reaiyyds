// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = '1.4.31'
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


project('androidbase') { // app是你工程的名字，配置只对当前工程有效
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // 注意修改 jar 包的路径
            // Xbootclasspath/p:是 Java 编译的寻址优先设置，先找缺省路径还是全路径
            options.compilerArgs.add('-Xbootclasspath/p:androidbase/libs/framework.jar')
        }
    }
    gradle.buildFinished {
        pushDownSDK(".idea/modules/androidbase/androidbase.iml");
    }
}

def pushDownSDK(iml) {
    def imlFile = file(iml)
    try {
        def parsedXml = (new XmlParser()).parse(imlFile)
        def jdkIndexOf = parsedXml.component[1].orderEntry.findIndexOf { it.'@type' == 'jdk' }
        if (jdkIndexOf <= 1) {
            def jdkNode =parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            new Node(parsedXml.component[1], 'orderEntry',['type': 'jdk', 'jdkName': 'Android API 28 Platform', 'jdkType': 'Android SDK'])
            def writer = new StringWriter()
            new XmlNodePrinter(new PrintWriter(writer)).print(parsedXml)
            imlFile.text = writer.toString()
            println "Push File: $iml jdk priority ok"
            groovy.xml.XmlUtil.serialize(parsedXml,new FileOutputStream(imlFile))
        }
    } catch (Exception e) {
        // do nothing
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}